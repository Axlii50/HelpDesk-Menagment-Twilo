@model HelpDeskViewModel
@{
    Layout = "_Layout";
}

<section class="HelpDesk__section">
    <div class="container-fluid container__HelpDesk">
        <div class="HelpDesk__content">
            <div class="HelpDesk__box">
                <div class="HelpDesk__addBtnBox">
                    <a class="HelpDesk__addBtn" data-bs-toggle="modal" data-bs-target="#Dodawanie">Dodaj</a>
                </div>
                <div class="modal fade" id="Dodawanie" tabindex="-1" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h1 class="modal-title ticket__header">Dodaj ticket</h1>
                                <button type="button" class="btn-close ticket__close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>

                            <form class="ticket__form" asp-action="AddTicket" asp-controller="HelpDesk">
                                @Html.Hidden("AccountID",Model.AccountID)
                                <div class="modal-body modal-body--addTicket">
                                    <div class="ticket__row">
                                        <div class="ticket__titleBox">
                                            @Html.TextBox("TicketTitle",null,null,new  {@class = "ticket__input ticket__input--title", @placeholder = "Wpisz tytuł...", @autocomplete="off"})
                                            @*<input type="text" id="ticketTitle" class="ticket__input ticket__input--title" placeholder="Wpisz tytuł..." />*@
                                        </div>
                                    </div>

                                    <div class="ticket__row">
                                        @Html.TextArea("TicketDescription",string.Empty,new {@class = "ticket__textarea", @placeholder = "Opis oraz informacje"})
                                        @*<textarea id="ticketOpis" class="ticket__textarea" placeholder="Opis oraz informacje"></textarea>*@
                                    </div>

                                    <div class="ticket__row">
                                        <label class="ticket__lable">Kategoria:</label>
                                        @Html.DropDownList("TicketCategory",HelpDesk_Menagment_Twilo.HtmlHelper.TicketCategoryGetList(), string.Empty, new {@class = "ticket__select"})
                                    </div>

                                    <div class="ticket__row">
                                        <label class="ticket__lable">Status:</label>
                                        @Html.DropDownList("TicketStatus",HelpDesk_Menagment_Twilo.HtmlHelper.TicketStatusGetList(), string.Empty, new {@class = "ticket__select"})
                                    </div>

                                    <div class="ticket__row">
                                        <label class="ticket__lable">Priorytet:</label>
                                        @Html.DropDownList("TicketPriority",HelpDesk_Menagment_Twilo.HtmlHelper.TicketPriorityGetList(), string.Empty, new {@class = "ticket__select"})
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary ticket__btn ticket__btn--close" data-bs-dismiss="modal">Zamknij</button>
                                        @*<button type="submit" class="btn btn-primary ticket__btn ticket__btn--add">Dodaj</button>*@
                                        <input type="submit" class="btn btn-primary ticket__btn ticket__btn--add" value="Dodaj" />
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
                <div class="modal fade" id="ticketInfo" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered">


                        <div class="modal-content modal-content--fullinfo">
                            <div class="modal-header">
                                <h1 class="modal-title ticket__header">Pełne informacje o ticketcie</h1>
                                <button type="button" class="btn-close ticket__close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <form class="ticket__edit">
                                <input data-val="true" data-val-required="The TicketID field is required." id="TicketID" name="TicketID" type="hidden" value="">
                                @Html.Hidden("AccountID",Model.AccountID)
                                <div class="modal-body modal-body__ticketInfo">

                                    <div class="ticketModal__row">
                                        <div class="ticketModal__title">
                                            <span class="ticketModal__titleText">Tutaj będzie tytuł ticketa</span>
                                        </div>
                                    </div>

                                    <div class="ticketModal__row">
                                        <div class="ticketModal__opis">
                                            <span class="ticketModal__opisText">

                                            </span>
                                        </div>
                                    </div>

                                    <div class="ticketModal__row">
                                        <div class="ticketModal__date">
                                            <span class="ticketModal__dateText">24-05-2004</span>
                                            <span class="ticketModal__status">Zrobione</span>
                                        </div>
                                    </div>

                                </div>
                                <div class="modal-footer modal-footer__ticket">
                                    <div class="modal-footer__ticketBtns">
                                        <button type="button" class="btn btn-secondary ticket__btn ticket__btn--close" data-bs-dismiss="modal">Zamknij</button>
                                        <button type="submit" class="btn btn-primary ticket__btn ticket__btn--delete" asp-action="DeleteTicket" asp-controller="HelpDesk">Usuń</button>
                                        <button type="submit" class="btn btn-primary ticket__btn ticket__btn--edit">Komentarz</button>
                                        <button type="submit" class="btn btn-primary ticket__btn ticket__btn--edit" asp-action="EditTicket" asp-controller="HelpDesk">Edytuj</button>
                                    </div>
                                </div>
                            </form>
                        </div>


                        <div class="modal-content">
                            <div class="comms">
                                <div class="comms__box">

                                    <div class="comment">
                                        <div class="comment__row comment__row--title">
                                            <span class="comment__title">Tutuł komentarza</span>
                                        </div>
                                        <div class="comment__row">
                                            <span class="comment__text">Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</span>
                                        </div>
                                        <div class="comment__row comment__row--info">
                                            <span class="comment__date">24-04-2004</span>
                                            <span class="comment__author">Jakub Stegienko</span>
                                        </div>
                                        <div class="comment__row comment__row--btns">
                                            <button class="comment__btn" type="submit">Usuń</button>
                                        </div>
                                    </div>


                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="HelpDesk__table">
                    <div class="tableDiv">
                        @{
                            int ColumnIndex = 0;
                            foreach (var pair in Model.Tickets)
                            {
                                int typeCounter = Enum.GetValues(typeof(HelpDesk_Menagment_Twilo.Models.DataBase.Ticket.TicketPriority)).Length - 1;
                                int Counter = ColumnIndex * Enum.GetValues(typeof(HelpDesk_Menagment_Twilo.Models.DataBase.Ticket.TicketPriority)).Length;

                                <div class="table__column">
                                    <div class="table__head">
                                        <span class="table__headText">@pair.Key.ToString()</span>
                                    </div>
                                    <div class="accordion accordion-flush" id="accordionParent--@ColumnIndex">
                                        @foreach (HelpDesk_Menagment_Twilo.Models.DataBase.Ticket.TicketPriority type in Enum.GetValues(typeof(HelpDesk_Menagment_Twilo.Models.DataBase.Ticket.TicketPriority)))
                                        {
                                            <div class="accordion-item">
                                                <h2 class="accordion-header">
                                                    <button class="accordion-button collapsed btnAccordion" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapse@(Counter - typeCounter)--@ColumnIndex" aria-expanded="false" aria-controls="flush-collapse@(Counter - typeCounter)--@ColumnIndex">
                                                        @type.ToString()
                                                        <div class="numbers">
                                                            <div class="number number--nowe">@Model.Tickets[pair.Key].Count(tic => tic.Status == HelpDesk_Menagment_Twilo.Models.DataBase.Ticket.TicketStatus.New && tic.Priority == type)</div>
                                                            <div class="number number--rozpatrywane">@Model.Tickets[pair.Key].Count(tic => tic.Status == HelpDesk_Menagment_Twilo.Models.DataBase.Ticket.TicketStatus.InProgress && tic.Priority == type)</div>
                                                            <div class="number number--wstrzymane">@Model.Tickets[pair.Key].Count(tic => tic.Status == HelpDesk_Menagment_Twilo.Models.DataBase.Ticket.TicketStatus.Halted && tic.Priority == type)</div>
                                                            <div class="number number--zakonczone">@Model.Tickets[pair.Key].Count(tic => tic.Status == HelpDesk_Menagment_Twilo.Models.DataBase.Ticket.TicketStatus.Completed && tic.Priority == type)</div>
                                                        </div>
                                                    </button>
                                                </h2>
                                                <div id="flush-collapse@(Counter - typeCounter)--@ColumnIndex" class="accordion-collapse collapse" data-bs-parent="#accordionParent--@ColumnIndex">
                                                    <div class="accordion-body">
                                                        <div class="tickets">
                                                            @foreach (var ticket in pair.Value)
                                                            {
                                                                if (ticket.Priority != type) continue;
                                                                <div class="table__row">
                                                                    <div class="table__body">
                                                                        <div class="table__bodyRow table__bodyRowTitle">
                                                                            <a class="table__bodyTitle" data-bs-toggle="modal" data-bs-target="#ticketInfo">@ticket.Title</a>
                                                                        </div>
                                                                        <div class="table__bodyRow table__bodyRowNote">
                                                                            <span class="table__note">
                                                                                @Html.Raw(ticket.Description.Replace("\n","<br>"))
                                                                            </span>
                                                                        </div>
                                                                        <div class="table__bodyRow">
                                                                            <div class="table__dateBox">
                                                                                <input data-val="true" data-val-required="The TicketID field is required." id="TicketID" name="TicketID" type="hidden" value="@ticket.TicketID">
                                                                                <span class="table__date">@ticket.DateofCreation</span>
                                                                                <span class="table__check">@ticket.Status.ToString()</span>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            }
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            typeCounter--;
                                        }
                                    </div>
                                </div>

                                ColumnIndex++;
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts{
    <script>
        'use strict';

        const tickets = document.querySelectorAll('.table__bodyTitle');
        let modalTitle = document.querySelector('.ticketModal__titleText');
        let modalText = document.querySelector('.ticketModal__opisText');
        let modalDate = document.querySelector('.ticketModal__dateText');
        let modalStatus = document.querySelector('.ticketModal__status');
        let modalTicketId = document.querySelector('#TicketID');

        const modalDeleteBtn = document.querySelector('.ticket__btn--delete');
        const modalAddBtn = document.querySelector('.ticket__btn--add');
        const modalAdd = document.querySelector('.HelpDesk__addBtn');

        modalAdd.addEventListener('click', function () {
            modalAddBtn.disabled = false;
        })

        //console.log(modalTicketId.nodeValue);

        tickets.forEach(function (ticket) {
            ticket.addEventListener('click', function (e) {
                const ticketInfo = ticket.parentNode.parentNode;

                const title = ticketInfo.querySelector('.table__bodyTitle').textContent;
                const text = ticketInfo.querySelector('.table__note').innerHTML;
                const date = ticketInfo.querySelector('.table__date').textContent;
                const status = ticketInfo.querySelector('.table__check').textContent
                const ticketID = ticketInfo.querySelector('#TicketID').value;

                modalTitle.textContent = title;
                modalText.innerHTML = text;
                modalDate.textContent = date;
                modalStatus.textContent = status;
                modalTicketId.value = ticketID;
                console.log(ticketID);
                console.log("ttt");

                modalDeleteBtn.disabled = false;
            })
        })

        modalDeleteBtn.addEventListener("click", function () {
            //modalDeleteBtn.disabled = true;
        })

        modalAddBtn.addEventListener("click", function () {
            //modalAddBtn.disabled = true;
        })

    </script>
}
